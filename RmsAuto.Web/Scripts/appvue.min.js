'use strict'; var app = new Vue({ el: '#app', mounted: function () { this.loaded() }, data: { jsonModel, isArticleGroup: !1, isOrderGroup: !1, isPartnerGroup: !1, lastGroup: '', loading: !1 }, methods: { ready: function () { this.loading = !0, this.$http({ url: '/', method: 'GET' }).then(function () { this.loading = !1 }, function () { }) }, IsAccess: function (b, c) { if (!0 === b) return !0; for (var d = 0; d < c.length; d++)for (var f, e = 0; e < userPermissions.length; e++)if (f = c[d].ID, c[d].ID == userPermissions[e]) return !0; return !1 }, loaded: function () { this.isArticleGroup = !1, this.isOrderGroup = !1, this.isPartnerGroup = !1 }, ShowModel: function (b) { this.changeVisible(b), this.IsCollapsed(b) }, IsCollapsed: function (b) { var c = document.getElementById(b + '_arrow'), d = document.getElementById(b + '_toggles'); c.classList.contains('rotate') ? (c.classList.remove('rotate'), d.style.display = 'initial') : (c.classList.add('rotate'), d.style.display = 'none') }, changeVisible: function (b) { var c = document.getElementById(b); null !== c && ('none' === c.style.display ? c.style.display = 'block' : c.style.display = 'none') }, tryIt: function (b) { this.changeVisible(b + '_article'), this.changeVisible(b + '_brand'), this.changeVisible(b + '_analogues'), this.changeVisible(b + '_execute'), this.changeVisible(b + '_orderId'), this.changeVisible(b + '_OrderHead'); var c = document.getElementById(b + '_tryIt'); null !== c && ('Try it out' === c.innerHTML ? (c.innerHTML = 'Cancel', c.classList.add('cancel')) : (c.innerHTML = 'Try it out', c.classList.remove('cancel'))) }, syntaxHighlight: function (b) { return 'string' != typeof b && (b = JSON.stringify(b, void 0, 2)), b = b.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;'), b.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, function (c) { var d = 'number'; return /^"/.test(c) ? /:$/.test(c) ? d = 'key' : d = 'string' : /true|false/.test(c) ? d = 'boolean' : /null/.test(c) && (d = 'null'), '<span class="' + d + '">' + c + '</span>' }) }, replaceString: function (b, c, d) { for (var e = 0; e < d.length; ++e)d.substring(e, e + b.length) === b && (d = d.substring(0, e) + c + d.substring(e + b.length, d.length)); return d }, escapeSpecialChars: function (b) { return b.replace(/\\n/g, '').replace(/\\'/g, '\\\'').replace(/\\"/g, '\\"').replace(/\\&/g, '\\&').replace(/\\r/g, '\\r').replace(/\\t/g, ' ').replace(/\\b/g, '\\b').replace(/\\f/g, '\\f') }, request: function (b, c, d) { var e = window.location.origin, f = null; this.changeVisible(b + '_loader'); var g = $('#' + b + '_resp'), h = $('#' + b + '_code'), k = $('#' + b + '_loader'), l = $('#' + b + '_curl'), m = $('#' + b + '_request-url'); if (document.getElementById(b + '_divCurl').style.display = 'block', document.getElementById(b + '_divRequestUrl').style.display = 'block', l.html('curl -X ' + c + ' "' + e + '' + d + '"'), l.append(' -H "accept: application/json"'), '' !== token && 'GetPartners' !== b && 'GetOrders' !== b && l.append(' -H "authorization: ' + token + '"'), 'POST' === c) { f = document.getElementById('CreateOrder_OrderHead').value; var n = JSON.stringify(f, null, 0), o = this.escapeSpecialChars(n), p = o.replace(/\s+/g, ' ').trim(); l.append(' -d ' + p + '') } m.html(e + d + ''), $.ajax({ url: d, method: c, crossDomain: !0, contentType: 'application/json; charset=utf-8', dataType: 'json', data: f, cache: !1, beforeSend: function (q) { '' !== token && (q.setRequestHeader('Authorization', token), q.setRequestHeader('X-Mobile', 'false')) }, success: function (q) { 'CreateOrder' === b && (delete q.Reaction, delete q.Username, delete q.OrderDate, delete q.CompletedDate, delete q.OrderName); var r = JSON.stringify(q, null, 2); 'string' != typeof r && (r = JSON.stringify(r, void 0, 2)), g.html(r), h.html('200'), document.getElementById(b + '_loader').style.display = 'none' }, error: function (q) { h.html(q.status), 401 === q.status && g.html('{\n    "Message": "Authorization has been denied for this request."\n}'), 404 === q.status && 'Error Not Found' === q.responseJSON && g.html('{\n    "Message": "' + q.responseJSON + '"\n}'), 404 === q.status && 'Not Found' === q.statusText && 'Error Not Found' !== q.responseJSON && g.html('{\n    "Message": "Access Denied"\n}'), 405 === q.status && g.html('{\n    "Message": "Method not allowed."\n}'), 400 === q.status && g.html('{\n    "Message": "' + q.responseJSON.MessageDetail + '"\n}'), 500 === q.status && g.html('{\n    "Message":  "Internal Server Error or Unauthorized Error"\n}'), document.getElementById(b + '_loader').style.display = 'none' } }) }, validation: function (b) { return '' !== b.value || (b.classList.add('invalid'), b.oninput = function () { b.classList.remove('invalid') }, !1) }, select: function (b) { 'GetBrands' === b && this.GetBrands(), 'GetSpareParts' === b && this.GetSpareParts(), 'GetOrders' === b && this.GetOrders(), 'CreateOrder' === b && this.CreateOrder(), 'GetOrder' === b && this.GetOrder(), 'GetPartners' === b && this.GetPartners() }, GetBrands: function () { var b = document.getElementById('GetBrands_article'); if (!1 === this.validation(b)) return !1; var c = document.getElementById('GetBrands_analogues'), d = '/api/Articles/' + b.value + '/Brands'; '' !== c.value && (d += '?analogues=' + c.value + ''), this.request('GetBrands', 'GET', d) }, GetSpareParts: function () { var b = document.getElementById('GetSpareParts_article'), c = document.getElementById('GetSpareParts_brand'), d = this.validation(b), e = this.validation(c); if (d && !1 === e) return !1; var f = document.getElementById('GetSpareParts_analogues'), g = '/api/Articles/' + b.value + '/Brand/' + c.value; '' !== f.value && (g += '?analogues=' + f.value + ''), this.request('GetSpareParts', 'GET', g) }, GetOrders: function () { this.request('GetOrders', 'GET', '/api/orders') }, CreateOrder: function () { var b = document.getElementById('CreateOrder_OrderHead'), d = this.validation(b); return !1 !== d && void this.request('CreateOrder', 'POST', '/api/orders') }, GetOrder: function () { var b = document.getElementById('GetOrder_orderId'), c = '/api/orders/' + b.value, d = this.validation(b); return !1 !== d && void this.request('GetOrder', 'GET', c) }, GetPartners: function () { this.request('GetPartners', 'GET', '/api/Partners/') } } });