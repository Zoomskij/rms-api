@using System.Web.Configuration;
@model RMSAutoAPI.Models.LoginModel


@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Login";
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link href="~/Content/api.css" rel="stylesheet" />
}

<style type="text/css">
    .parent {
        width: 100%;
        height: 100%;
        position: fixed;
        top: 0;
        left: 0;
        display: flex;
        align-items: center;
        align-content: center;
        justify-content: center;
        overflow: auto;
    }

    .window {
    }

    .window {
        background: white;
        border-radius: 10px;
        max-width: 640px;
        max-height: 600px;
    }

    .block {
        padding: 10%;
        padding-top: 0;
    }

    .chest {
        position: relative;
        text-align: right;
        float: right;
        top: 5px;
        right: 10px;
        color: black;
        font-weight: 600;
    }

        .chest:hover {
            color: black;
        }
</style>

@*<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.bootstrap.min.js"></script>*@

@using (Ajax.BeginForm("Login", new AjaxOptions { }))
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()

    <div class="parent">
        <div class="window">
            <a href="#" data-dismiss="modal" class="chest">x</a>
            <div class="block">
                <h3>Вход на сайт </h3>


                <hr style="margin-top:-5px" />

                <h4>oauth2 (OAuth2, password)</h4>
                Для получения Токена необходимо вызвать POST-метод по адресу: <br />
                <b>@WebConfigurationManager.AppSettings["UrlApi"]/api/auth/token</b><br />
                передав три пары ключ/значение:<br />
                <ul>
                    <li>username=%USERNAME%</li>
                    <li>password=%PASSWORD%</li>
                    <li>grant_type=password</li>
                </ul>

                @Html.ValidationSummary()
                <input type="hidden" name="returnUrl" value="@ViewBag.returnUrl" />


                <p>
                    @Html.LabelFor(x => x.Email, new { @class = "control-label" }) <br />
                    @Html.EditorFor(x => x.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
                </p>
                <p>
                    @Html.LabelFor(x => x.Password, new { @class = "control-label" }) <br />
                    @Html.EditorFor(x => x.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
                </p>
                <p>
                    <label>Партнер</label><br />
                    @{
                        List<SelectListItem> regions = new List<SelectListItem>();
                        if (ViewBag.Partners != null)
                        {
                            regions = @ViewBag.Partners;
                        }

                    }

                    @Html.DropDownListFor(model => model.Region, regions, "-- Выберите Регион --", new { @class = "form-control", style = "width: 192px;" })
                </p>

                <p><button type="submit" class="btn btn-info">Войти</button></p>
            </div>
        </div>
    </div>

}