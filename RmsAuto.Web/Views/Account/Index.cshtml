@model RMSAutoAPI.Models.LoginModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Login";
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link href="~/Content/api.css" rel="stylesheet" />
}

<h2>Вход на сайт</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div>
        @Html.ValidationSummary()
        <input type="hidden" name="returnUrl" value="@ViewBag.returnUrl" />


        <p>
            @Html.LabelFor(x => x.Email, new { @class = "control-label" }) <br />
            @Html.EditorFor(x => x.Email, new { @class = "form-control" })
        </p>
        <p>
            @Html.LabelFor(x => x.Password, new { @class = "control-label" }) <br />
            @Html.EditorFor(x => x.Password, new { @class = "form-control" })
        </p>
        <p>
            <label>Партнер</label><br />
            @{
                List<SelectListItem> regions = new List<SelectListItem>();
                if (ViewBag.Partners != null)
                {
                    regions = @ViewBag.Partners;
                }

            }

            @Html.DropDownListFor(model => model.Region, regions, "-- Select Region --", new { @class = "form-control" })
        </p>

        <p><button type="submit" class="btn btn-info">Войти</button></p>
    </div>
}


@*<script type="text/javascript">
        var loginData = {
            grant_type: 'password',
            username: 'api'
            password: '123',
            region: rmsauto
        };

        $.ajax({
            type: 'POST',
            url: 'http://localhost:52682/api/auth/token',
            data: loginData
        }).done(function (data) {
            self.user(data.userName);
            // Cache the access token in session storage.
            sessionStorage.setItem(tokenKey, data.access_token);
        }).fail(showError);


        $("button").click(function (e) {
            e.preventDefault();
            $.ajax({
                type: 'POST',
                url: 'http://localhost:52682/api/auth/token',
                data: loginData
            }).done(function (data) {
                self.user(data.userName);
                // Cache the access token in session storage.
                sessionStorage.setItem(tokenKey, data.access_token);
            }).fail(showError);
        });

    </script>*@