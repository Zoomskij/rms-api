@using System.Web.Configuration;
@using System.ComponentModel;
@model List<RMSAutoAPI.Models.ApiMethod>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<!DOCTYPE html>



<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link href="~/Content/api.css" rel="stylesheet" />

</head>
<body>

    <br />

    <div class="wrapper">

        [ Base URL: @WebConfigurationManager.AppSettings["UrlApi"] ]
        <br /><br />

        <div class="rms-title">
            API.RMSAUTO представляет собой REST-сервис.
            Для обращения к методам api нужно пройти авторизацию на сервисе посредством персонального логина/пароля.
            В ответ будет сгенерирован Bearer токен, который необходимо передавать в HTTP заголовок вызываемого метода.
            <br /><br />
            ПРИМЕЧАНИЕ: Клиентам наших региональных партнёров для авторизации необходимо дополнительно передать код партнёра
            (код партнёра можно получить, воспользовавшись методом /api/Partners).
        </div>


        <div id="app">
            <div class="opblock-tag-section">
                <div style="height: auto; border: none; margin: 0px; padding: 0px;">

                    @*<div v-for="group in jsonModel" track-by="group.Group">
                        <h4 class="opblock-tag no-desc" id="operations-tag-Articles">
                            <a class="nostyle"><span>{{group.Group}}</span></a>
                        </h4>
                        <hr style="margin-bottom:10px; margin-top:15px;" />
                    </div>*@

                    <div v-for="method in jsonModel">
                        <div class="opblock" v-bind:class="{'opblock-get': method.Type === 'GET', 'opblock-post': method.Type === 'POST'}" id="operations">
                            <a class="nostyle" v-on:click="changeVisible(method.Name)">
                                <div class="opblock-summary opblock-summary-get">
                                    <div class="opblock-summary-method"> {{ method.Type }} </div>
                                    <div class="opblock-summary-path"> {{ method.Uri }} </div>
                                    <div class="opblock-summary-description"> {{ method.Description }} </div>
                                </div>
                                <hr v-bind:class="{'hr-border-get': method.Type === 'GET', 'hr-border-post': method.Type === 'POST'}" />
                            </a>
                            <div v-bind:id="method.Name" style="height: auto; border: none; margin: 0px; padding: 0px; display:none;">
                                <div class="opblock-body">

                                    <div class="opblock-description-wrapper">
                                        <div class="opblock-description">
                                            {{method.TitleDescription}}
                                        </div>
                                    </div>

                                    <div class="opblock-section-header">
                                        <div class="tab-header">
                                            <span class="opblock-title"><b>Parameters</b></span>
                                            <button v-bind:id="method.Name + '_tryIt'" class="btn try-out__btn pull-right" v-on:click="tryIt(method.Name)">Try it out</button>
                                        </div>
                                    </div>

                                    <div class="col-lg-12 col-md-12 col-xs-12 col-sm-12 row">
                                        <div class="col-lg-2 col-md-2 col-xs-2 col-sm-2">
                                            <div class="param-name">Name</div>
                                        </div>
                                        <div class="col-lg-10 col-md-10 col-xs-10 col-sm-10">
                                            <div class="param-name">Description</div>
                                        </div>
                                    </div>
                                    <hr style="margin-top:5px; margin-bottom:10px" />

                                    <div v-for="parameter in method.Parameters">
                                        <div class="col-lg-12 col-md-12 col-xs-12 col-sm-12 row">
                                            <div class="col-lg-2 col-md-2 col-xs-2 col-sm-2">
                                                <b>{{parameter.Name}} </b>
                                                <span v-if="parameter.IsRequired" class="required">&nbsp;*&nbsp;required</span>
                                            </div>
                                            <div class="col-lg-10 col-md-10 col-xs-10 col-sm-10">
                                                {{parameter.Description}}
                                            </div>
                                        </div>

                                        <div class="col-lg-12 col-md-12 col-xs-12 col-sm-12 row">
                                            <div class="col-lg-2 col-md-2 col-xs-2 col-sm-2">
                                                {{parameter.Type}}<br />
                                                <span v-if="parameter.TypeParameter === 1">(path)</span>
                                                <span v-if="parameter.TypeParameter === 2">(query)</span>
                                                <span v-if="parameter.TypeParameter === 3">(body)</span>
                                            </div>
                                            <div class="col-lg-10 col-md-10 col-xs-10 col-sm-10">

                                                <div v-if="parameter.TypeParameter === 3" >
                                                    <textarea v-bind:id="method.Name + '_' + parameter.Name" style="width:100%"></textarea>
                                                </div>
                                                <div style="clear:both;"></div>

                                                <span v-if="parameter.Name !== 'analogues'">
                                                    <input v-bind:id="method.Name + '_' + parameter.Name" style="display:none" type="text" class="" title="" value="" v-bind:placeholder="parameter.Description">
                                                </span>

                                                <span v-if="parameter.Name === 'analogues'">
                                                    <select v-bind:id="method.Name + '_' + parameter.Name" class="" style="display:none">
                                                        <option value="">--</option>
                                                        <option value="true">true</option>
                                                        <option value="false">false</option>
                                                    </select>
                                                </span>
                                            </div>
                                        </div>
                                        <div style="padding-top:20px"></div>
                                    </div>
                                    @*  END PARAMETERS *@

                                    <div v-if="method.Parameters.length > 0">
                                        <div class="execute-wrapper">
                                            <button v-bind:id="method.Name + '_execute'" class="btn execute opblock-control__btn" v-on:click="select(method.Name)" style="width:100%; display:none">Execute</button>
                                        </div>
                                    </div>

                                    <div v-bind:id="method.Name + '_loader'" class="loader" style="display:none">Loading...</div>

                                    <div class="opblock-section-header">
                                        <div class="tab-header">
                                            <span class="opblock-title"><b>Responses</b></span>
                                        </div>
                                    </div>

                                    <div v-bind:id="method.Name + '_divCurl'" style="display:none">
                                        <br />
                                        <div class="execute-wrapper">
                                            <span class="response-label"> Curl</span>
                                        </div>

                                        <div class="execute-wrapper" style="padding-top:0">
                                            <pre class="example">
                                                <div v-bind:id="method.Name + '_curl'"></div>             
                                            </pre>
                                        </div>
                                    </div>

                                    <div v-bind:id="method.Name + '_divRequestUrl'" style="display:none">
                                        <div class="execute-wrapper">
                                            <span class="response-label"> Request URL</span>
                                        </div>

                                        <div class="execute-wrapper" style="padding-top:0">
                                            <pre class="example">
                                                <div class="request-url" v-bind:id="method.Name + '_request-url'"></div>               
                                            </pre>
                                        </div>
                                    </div>

                                    <br />
                                    <div class="col-lg-12 col-md-12 col-xs-12 col-sm-12 row">
                                        <div class="col-lg-2 col-md-2 col-xs-2 col-sm-2">
                                            <span class="response-label"> Server response</span>
                                        </div>
                                    </div>

                                    <br />
                                    <div class="col-lg-12 col-md-12 col-xs-12 col-sm-12 row">
                                        <div class="col-lg-2 col-md-2 col-xs-2 col-sm-2">
                                            <b>Code</b>
                                        </div>
                                        <div class="col-lg-10 col-md-10 col-xs-10 col-sm-10">
                                            <b>Details</b>
                                        </div>
                                    </div>

                                    <hr style="margin-top:5px; margin-bottom:10px" />

                                    <div style="margin-top:20px"></div>

                                    <div class="col-lg-12 col-md-12 col-xs-12 col-sm-12 row">
                                        <div class="col-lg-2 col-md-2 col-xs-2 col-sm-2">
                                            <div v-bind:id="method.Name + '_code'"></div>
                                        </div>
                                        <div class="col-lg-10 col-md-10 col-xs-10 col-sm-10">
                                            <pre class="example" style="margin-right: -25px;">
                                                <div v-bind:id="method.Name + '_resp'" style="max-height:600px"></div>
                                            </pre>
                                        </div>
                                    </div>

                                    <div style="padding-bottom:20px"></div>
                                </div>
                            </div>
                            @*END BODY*@
                        </div>
                    </div>

                </div>
            </div>
        </div>


        @*MODELS*@
        <section class="models">
            <div id="models-header" class="models-header">
                <h4>
                    <span>Models</span>
                    <svg width="20" height="20"><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#large-arrow-down"></use></svg>
                </h4>
            </div>
            <div id="all-models" style="height: auto; border: none; margin: 0px; padding: 0px; display:block;">

                @foreach (var method in Model.Where(x => x.Response != null))
                {
                    <div id="model-Brand" class="model-container">
                        <div class="model-box">
                            <p><span class="model-title"> @method.Response.GetType().Name</span> { </p>
                            @foreach (var property in @method.Response.GetType().GetProperties())
                            {
                                <table class="properties">
                                    <tr>
                                        <td valign="top" width="150">
                                            <span class="prop-name">@property.Name </span>
                                        </td>
                                        <td valign="top">
                                            <span class="model">
                                                <span class="prop">
                                                    <span class="prop-type">
                                                        @if (property.PropertyType.Name.ToLower().Equals("nullable`1"))
                                                        {
                                                            <span>int32 (nullable)</span>
                                                        }
                                                        else if (property.PropertyType.Name.ToLower().Equals("sparepartitemtype"))
                                                        {
                                                            <span>int32 </span>
                                                        }
                                                        else if (property.PropertyType.Name.ToLower().Equals("quality"))
                                                        {
                                                            <span>int32 </span>
                                                        }
                                                        else
                                                        {
                                                            @property.PropertyType.Name.ToLower()
                                                        }

                                                    </span>
                                                    <div class="markdown">
                                                        <span>
                                                            @{
                                                                if (method.Response.GetType().Name.Equals("Brand"))
                                                                {
                                                                    var prop = typeof(RMSAutoAPI.Models.Brand).GetProperty(property.Name);
                                                                    if (prop != null)
                                                                    {
                                                                        var attribute = (System.ComponentModel.DescriptionAttribute)prop.GetCustomAttributes(typeof(DescriptionAttribute), true)[0];
                                                                        <p>@attribute.Description</p>
                                                                    }
                                                                }

                                                                if (method.Response.GetType().Name.Equals("PartNumber"))
                                                                {
                                                                    var prop = typeof(RMSAutoAPI.Models.PartNumber).GetProperty(property.Name);
                                                                    if (prop != null)
                                                                    {
                                                                        var attribute = (System.ComponentModel.DescriptionAttribute)prop.GetCustomAttributes(typeof(DescriptionAttribute), true)[0];
                                                                        <p>@attribute.Description</p>
                                                                    }
                                                                }

                                                                if (method.Response.GetType().Name.Equals("Partner"))
                                                                {
                                                                    var prop = typeof(RMSAutoAPI.Models.Partner).GetProperty(property.Name);
                                                                    if (prop != null)
                                                                    {
                                                                        var attribute = (System.ComponentModel.DescriptionAttribute)prop.GetCustomAttributes(typeof(DescriptionAttribute), true)[0];
                                                                        <p>@attribute.Description</p>
                                                                    }
                                                                }

                                                            }
                                                        </span>

                                                    </div>
                                                </span>
                                            </span>
                                        </td>
                                    </tr>
                                </table>
                            }
                            }
                        </div>
                    </div>
                }
            </div>
        </section>
    </div> @*End wrapper*@

    <script type="text/javascript">
        var jsonModel = @Html.Raw(Json.Encode(@Model));
        var orderModel = @Html.Raw(Json.Encode(@ViewBag.OrderModel));
        var token = @Html.Raw(Json.Encode(@ViewBag.Token));
    </script>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/knockout")
    @Scripts.Render("~/bundles/bootstrap")
    <script src="~/Scripts/vue.min.js"></script>
    <script src="~/Scripts/appvue.js"></script>
    <script src="~/Scripts/app.js"></script>


</body>
</html>
