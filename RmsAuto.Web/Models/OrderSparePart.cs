using Newtonsoft.Json;
using System.ComponentModel;
using System.Web.Script.Serialization;

namespace RMSAutoAPI.Models
{
    public class OrderSparePart : Part 
    {
        /// <summary>
        /// Количество
        /// </summary>
        [Description("заказанное количество")]
        public int Count { get; set; }
        /// <summary>
        /// Цена
        /// </summary>
        [Description("желаемая цена")]
        public decimal Price { get; set; }
        /// <summary>
        /// Reference (необязательное поле)
        /// </summary>
        [Description("описание")]
        public string Reference { get; set; } = string.Empty;
        /// <summary>
        /// - признак запрещения замены у поставщика (обязательное поле)
        /// 0 - только заказанный номер
        /// 1 - разрешена замена от поставщика
        /// </summary>
        [Description("признак запрещения замены у поставщика (обязательное поле) false - только заказанный номер. true - разрешена замена от поставщика")]
        public bool StrictlyThisNumber { get; set; } = false;
        /// <summary>
        /// - признак реакции на коллизию кол-ва
        /// 0 - только указанное кол-во
        /// 1 - брать сколько есть, но не выше указанного
        /// 2 - разрешение при необходимости на выравнивание вверх по MinQty
        /// </summary>
        [Description("признак реакции на коллизию кол-ва. 0 - только указанное кол-во. 1 - брать сколько есть, но не выше указанного. 2 - разрешение при необходимости на выравнивание вверх по MinQty")]
        public byte ReactionByCount { get; set; } = 0;
        /// <summary>
        /// - признак реакции на коллизию цены
        /// 0 - не выше указанной цены
        /// 1 - текущая цена поставщика(т.е.без проверки цены из заказа не зависимо от ее указания в заказе)
        /// </summary>
        [Description("признак реакции на коллизию цены. 0 - не выше указанной цены. 1 - текущая цена поставщика(т.е.без проверки цены из заказа не зависимо от ее указания в заказе)")]
        public byte ReactionByPrice { get; set; } = 0;
        /// <summary>
        /// признак реакции на выбор поставщика
        /// 0 - только указанный поставщик
        /// 1 - (зарезервировано для автоматического подбора поставщика по цене)
        /// 2 - (зарезервировано для автоматического подбора поставщика по сроку)
        /// 3 - (зарезервировано для автоматического подбора поставщика по качеству поставки)
        /// </summary>
        [JsonIgnore]
        [ScriptIgnore]
        [Description("наименование заказа (необязательное поле)")]
        public byte ReactionBySupplier { get; set; } = 0;

    }
}