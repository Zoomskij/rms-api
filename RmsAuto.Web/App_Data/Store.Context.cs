//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RMSAutoAPI.App_Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ex_rmsauto_storeEntities : DbContext
    {
        public ex_rmsauto_storeEntities()
            : base("name=ex_rmsauto_storeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Rates> Rates { get; set; }
        public virtual DbSet<Settings> Settings { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<BrandEquivalents> BrandEquivalents { get; set; }
        public virtual DbSet<LogRequests> LogRequests { get; set; }
        public virtual DbSet<OrderLines> OrderLines { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<SpareParts> SpareParts { get; set; }
        public virtual DbSet<OrderLineStatuses> OrderLineStatuses { get; set; }
        public virtual DbSet<Methods> Methods { get; set; }
        public virtual DbSet<Parameters> Parameters { get; set; }
        public virtual DbSet<Permutation1C> Permutation1C { get; set; }
        public virtual DbSet<Permissions> Permissions { get; set; }
        public virtual DbSet<Responses> Responses { get; set; }
    
        public virtual ObjectResult<spSearchCrossesWithPriceSVC_Result> spSearchCrossesWithPriceSVC(string partNumber, string manufacturer, Nullable<bool> showAnalogs, string selectedBrands, string acctgID, Nullable<int> clientGroup, string region)
        {
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var manufacturerParameter = manufacturer != null ?
                new ObjectParameter("Manufacturer", manufacturer) :
                new ObjectParameter("Manufacturer", typeof(string));
    
            var showAnalogsParameter = showAnalogs.HasValue ?
                new ObjectParameter("ShowAnalogs", showAnalogs) :
                new ObjectParameter("ShowAnalogs", typeof(bool));
    
            var selectedBrandsParameter = selectedBrands != null ?
                new ObjectParameter("SelectedBrands", selectedBrands) :
                new ObjectParameter("SelectedBrands", typeof(string));
    
            var acctgIDParameter = acctgID != null ?
                new ObjectParameter("AcctgID", acctgID) :
                new ObjectParameter("AcctgID", typeof(string));
    
            var clientGroupParameter = clientGroup.HasValue ?
                new ObjectParameter("ClientGroup", clientGroup) :
                new ObjectParameter("ClientGroup", typeof(int));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSearchCrossesWithPriceSVC_Result>("spSearchCrossesWithPriceSVC", partNumberParameter, manufacturerParameter, showAnalogsParameter, selectedBrandsParameter, acctgIDParameter, clientGroupParameter, regionParameter);
        }
    
        public virtual ObjectResult<spSearchBrands_Result> spSearchBrands(string partNumber, Nullable<bool> showAnalogs, string acctgID, string region)
        {
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var showAnalogsParameter = showAnalogs.HasValue ?
                new ObjectParameter("ShowAnalogs", showAnalogs) :
                new ObjectParameter("ShowAnalogs", typeof(bool));
    
            var acctgIDParameter = acctgID != null ?
                new ObjectParameter("AcctgID", acctgID) :
                new ObjectParameter("AcctgID", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSearchBrands_Result>("spSearchBrands", partNumberParameter, showAnalogsParameter, acctgIDParameter, regionParameter);
        }
    
        public virtual ObjectResult<spGetFranches_Result> spGetFranches()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetFranches_Result>("spGetFranches");
        }
    
        public virtual int spGetCartSpareParts(string articles, string acctgID, string region, Nullable<int> clientGroup)
        {
            var articlesParameter = articles != null ?
                new ObjectParameter("Articles", articles) :
                new ObjectParameter("Articles", typeof(string));
    
            var acctgIDParameter = acctgID != null ?
                new ObjectParameter("AcctgID", acctgID) :
                new ObjectParameter("AcctgID", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var clientGroupParameter = clientGroup.HasValue ?
                new ObjectParameter("ClientGroup", clientGroup) :
                new ObjectParameter("ClientGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetCartSpareParts", articlesParameter, acctgIDParameter, regionParameter, clientGroupParameter);
        }
    
        public virtual ObjectResult<spGetSparePart_Result> spGetSparePart(string brand, string partNumber, Nullable<int> supplierID, string clientID)
        {
            var brandParameter = brand != null ?
                new ObjectParameter("Brand", brand) :
                new ObjectParameter("Brand", typeof(string));
    
            var partNumberParameter = partNumber != null ?
                new ObjectParameter("PartNumber", partNumber) :
                new ObjectParameter("PartNumber", typeof(string));
    
            var supplierIDParameter = supplierID.HasValue ?
                new ObjectParameter("SupplierID", supplierID) :
                new ObjectParameter("SupplierID", typeof(int));
    
            var clientIDParameter = clientID != null ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSparePart_Result>("spGetSparePart", brandParameter, partNumberParameter, supplierIDParameter, clientIDParameter);
        }
    
        public virtual int spCalcOrder(string articles, string acctgID, string region, Nullable<int> clientGroup)
        {
            var articlesParameter = articles != null ?
                new ObjectParameter("Articles", articles) :
                new ObjectParameter("Articles", typeof(string));
    
            var acctgIDParameter = acctgID != null ?
                new ObjectParameter("AcctgID", acctgID) :
                new ObjectParameter("AcctgID", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var clientGroupParameter = clientGroup.HasValue ?
                new ObjectParameter("ClientGroup", clientGroup) :
                new ObjectParameter("ClientGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCalcOrder", articlesParameter, acctgIDParameter, regionParameter, clientGroupParameter);
        }
    }
}
